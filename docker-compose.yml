##version of compose
version: "3"
##services that make up our application
services:
    api:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start
        volumes: ##volume is used to map files and folders on host to the container, if change code in host it also changes code in docker container
            - .:/app
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles

        expose:
            - "8000"
        # comment this off when using nginx to serve the api
        # ports:
        #     - "8000:8000" ##first 8000 on container the other on machine
        
        env_file:
            - .env
        depends_on:
            - postgres-db ##can call it any name
            - redis 

        networks:
            - carrental-react ##can call it any name

    client:
        build:
            context: ./client
            dockerfile: Dockerfile.dev
        restart: on-failure
        volumes:
            - ./client:/app  ##mapping current local directory to the app working directory inside the container
            - /app/node_modules ##this helps avoid copying over local node_modules with the docker container
        networks:
            - carrental-react
    
    postgres-db:
        # image: postgres:12.0-alpine #this is if not using postgis
        image: postgis/postgis:12-3.1-alpine
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data/ ##default location(directory path)
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
            - POSTGRES_DB=${POSTGRES_DB}
        networks:
            - carrental-react
    
    redis:
        image: redis:5-alpine
        networks:
            - carrental-react

    celery_worker:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start-celeryworker
        volumes:
            - .:/app
        env_file:
            - .env
        depends_on:
            - redis
            - postgres-db
        networks:
            - carrental-react

    flower:
        build:
            context: .
            dockerfile: ./docker/local/django/Dockerfile
        command: /start-flower
        volumes:
            - .:/app
        env_file:
            - .env
        ports:
            - "5557:5555"
        depends_on:
            - redis
            - postgres-db
        networks:
            - carrental-react

    nginx:
        restart: always
        depends_on:
            - api
        volumes:
            - static_volume:/app/staticfiles
            - media_volume:/app/mediafiles
        build:
            context: ./docker/local/nginx
            dockerfile: Dockerfile
        ports:
            - "8080:80"
        networks:
            - carrental-react


networks:
    carrental-react:
        driver: bridge ##default

volumes:
    postgres_data:
    static_volume:
    media_volume:
